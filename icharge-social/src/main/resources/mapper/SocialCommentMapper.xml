<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lovbe.icharge.dao.ReplyCommentDao">

    <!-- 更新评论的回复数 -->
    <insert id="updateCommentCount">
        INSERT INTO s_interaction_statistic (uid, type, comment_count)
        VALUES
        <foreach collection="statisticList" item="statistic" separator=",">
            (#{statistic.uid}, #{statistic.type}, #{statistic.commentCount})
        </foreach>
        ON DUPLICATE KEY UPDATE
        comment_count = comment_count + VALUES(comment_count)
    </insert>

    <!-- 统计数减1 -->
    <update id="updateReplyCountBySub">
        UPDATE s_interaction_statistic
        SET comment_count = IF(comment_count - #{deleteCount} <![CDATA[ < ]]> 0, 0, comment_count - #{deleteCount})
        WHERE uid = #{uid}
    </update>

    <!-- 删除统计表 -->
    <delete id="deleteStatistic">
        DELETE FROM s_interaction_statistic WHERE uid = #{uid}
    </delete>
    <!-- 获取评论统计 -->
    <select id="selectCommentStatistic" resultType="com.lovbe.icharge.common.model.dto.TargetStatisticDo">
        SELECT * FROM s_interaction_statistic where uid = #{targetComment.targetId}
    </select>

    <!-- 获取评论列表 -->
    <select id="selectReplyCommentList" resultMap="commentMap">
        SELECT
            dc.uid,
            dc.target_id,
            cis.like_count,
            cis.comment_count AS reply_count,
            dc.is_top,
            dc.is_feature,
            dc.user_id,
            pu.username,
            pu.avatar_url,
            pu.domain,
            pu.location,
            pu.industry,
            pu.level,
            pu.`status`,
            dc.content,
            dc.content_img_url,
            dc.create_time,
            rc.*
        FROM (SELECT
                 uid,
                 target_id,
                 is_top,
                 is_feature,
                 user_id,
                 content,
                 content_img_url,
                 create_time
             FROM s_comment
             WHERE `status` = 'A'
               AND target_id = #{commentDTO.targetId}
               AND parent_id IS NULL
             ORDER BY is_top DESC, is_feature DESC, create_time ASC
             LIMIT #{commentDTO.offset}, #{commentDTO.limit}
             ) dc
        LEFT JOIN p_user pu ON dc.user_id = pu.uid
        LEFT JOIN s_interaction_statistic cis ON dc.uid = cis.uid AND cis.status = 'A'
        LEFT JOIN (
            SELECT
                rc.uid AS reply_uid,
                rc.target_id AS reply_target_id,
                rc.parent_id AS reply_parent_id,
                cis.like_count AS reply_like_count,
                rc.user_id AS reply_user_id,
                pu.username AS reply_username,
                pu.avatar_url AS reply_avatar_url,
                pu.domain AS reply_domain,
                pu.location AS reply_location,
                pu.industry AS reply_industry,
                pu.level AS reply_level,
                pu.`status` AS reply_status,
                rc.content AS reply_content,
                rc.content_img_url AS reply_content_img_url,
                rc.create_time AS reply_create_time,
                rpu.uid AS reply_reply_uid,
                rpu.domain AS reply_reply_domain,
                rpu.username AS reply_reply_username,
                rpu.location AS reply_reply_location,
                rpu.industry AS reply_reply_industry,
                rpu.`status` AS reply_reply_status
            FROM s_comment rc
            LEFT JOIN p_user pu ON rc.user_id = pu.uid
            LEFT JOIN p_user rpu ON rc.reply_user_id = rpu.uid
            LEFT JOIN s_interaction_statistic cis ON rc.uid = cis.uid AND cis.status = 'A'
            WHERE rc.`status` = 'A'
              AND rc.target_id = #{commentDTO.targetId}
              AND rc.parent_id IS NOT NULL
              AND (SELECT COUNT(*)
                   FROM s_comment rcc
                   WHERE rcc.parent_id = rc.parent_id
                     AND rcc.`status` = 'A'
                     AND rcc.create_time <![CDATA[ <= ]]> rc.create_time
                   ) <![CDATA[ <= ]]> 3
            ORDER BY rc.create_time
        ) rc ON dc.uid = rc.reply_parent_id
            AND rc.reply_target_id = #{commentDTO.targetId}
    </select>

    <!-- 获取楼中楼回复列表 -->
    <select id="selectCommentReplyList" resultMap="replyMap">
        SELECT rc.uid,
               rc.target_id,
               rc.parent_id,
               cis.like_count,
               rc.user_id,
               pu.username,
               pu.avatar_url,
               pu.domain,
               pu.location,
               pu.industry,
               pu.level,
               pu.`status`,
               rc.content,
               rc.content_img_url,
               rc.create_time,
               rpu.uid AS reply_user_id,
               rpu.username AS reply_username,
               rpu.avatar_url AS reply_avatar_url,
               rpu.domain AS reply_domain,
               rpu.location AS reply_location,
               rpu.industry AS reply_industry,
               rpu.level AS reply_level,
               rpu.`status` AS reply_status,
               NULL AS reply_uid
        FROM s_comment dc
        INNER JOIN s_comment rc ON dc.uid = rc.parent_id
            AND rc.status = 'A'
        LEFT JOIN p_user pu ON rc.user_id = pu.uid
        LEFT JOIN p_user rpu ON rc.reply_user_id = rpu.uid
        LEFT JOIN s_interaction_statistic cis ON dc.uid = cis.uid AND cis.status = 'A'
        WHERE dc.status = 'A'
        AND dc.uid = #{commentDTO.commentId}
        ORDER BY rc.create_time
        LIMIT #{commentDTO.offset}, #{commentDTO.limit}
    </select>

    <resultMap id="commentMap" type="com.lovbe.icharge.entity.dto.ReplyCommentDo">
        <id column="uid" property="uid"/>
        <result column="target_id" property="targetId"/>
        <result column="like_count" property="likeCount"/>
        <result column="reply_count" property="replyCount"/>
        <result column="is_top" property="isTop"/>
        <result column="is_feature" property="isFeature"/>
        <result column="user_id" property="userInfo.uid"/>
        <result column="username" property="userInfo.username"/>
        <result column="avatar_url" property="userInfo.avatarUrl"/>
        <result column="domain" property="userInfo.domain"/>
        <result column="location" property="userInfo.location"/>
        <result column="industry" property="userInfo.industry"/>
        <result column="level" property="userInfo.level"/>
        <result column="status" property="userInfo.status"/>
        <result column="content" property="content"/>
        <result column="content_img_url" property="contentImgUrl"/>
        <result column="create_time" property="createTime"/>
        <collection column="reply_uid" property="replyCommentList" ofType="com.lovbe.icharge.entity.dto.ReplyCommentDo" notNullColumn="reply_uid">
            <id column="reply_uid" property="uid"/>
            <result column="reply_target_id" property="targetId"/>
            <result column="reply_like_count" property="likeCount"/>
            <result column="reply_user_id" property="userInfo.uid"/>
            <result column="reply_username" property="userInfo.username"/>
            <result column="reply_avatar_url" property="userInfo.avatarUrl"/>
            <result column="reply_domain" property="userInfo.domain"/>
            <result column="reply_status" property="userInfo.status"/>
            <result column="reply_location" property="userInfo.location"/>
            <result column="reply_industry" property="userInfo.industry"/>
            <result column="reply_level" property="userInfo.level"/>
            <result column="reply_status" property="userInfo.status"/>
            <result column="reply_content" property="content"/>
            <result column="reply_content_img_url" property="contentImgUrl"/>
            <result column="reply_create_time" property="createTime"/>
            <result column="reply_reply_uid" property="replyUserInfo.uid"/>
            <result column="reply_reply_domain" property="replyUserInfo.domain"/>
            <result column="reply_reply_username" property="replyUserInfo.username"/>
            <result column="reply_reply_level" property="replyUserInfo.level"/>
            <result column="reply_reply_location" property="replyUserInfo.location"/>
            <result column="reply_reply_industry" property="replyUserInfo.industry"/>
            <result column="reply_reply_status" property="replyUserInfo.status"/>
        </collection>
    </resultMap>

    <resultMap id="replyMap" type="com.lovbe.icharge.entity.dto.ReplyCommentDo">
        <id column="uid" property="uid"/>
        <result column="target_id" property="targetId"/>
        <result column="like_count" property="likeCount"/>
        <result column="reply_count" property="replyCount"/>
        <result column="is_top" property="isTop"/>
        <result column="is_feature" property="isFeature"/>
        <result column="user_id" property="userInfo.uid"/>
        <result column="username" property="userInfo.username"/>
        <result column="avatar_url" property="userInfo.avatarUrl"/>
        <result column="domain" property="userInfo.domain"/>
        <result column="location" property="userInfo.location"/>
        <result column="industry" property="userInfo.industry"/>
        <result column="level" property="userInfo.level"/>
        <result column="status" property="userInfo.status"/>
        <result column="reply_user_id" property="replyUserInfo.uid"/>
        <result column="reply_username" property="replyUserInfo.username"/>
        <result column="reply_avatar_url" property="replyUserInfo.avatarUrl"/>
        <result column="reply_domain" property="replyUserInfo.domain"/>
        <result column="reply_location" property="replyUserInfo.location"/>
        <result column="reply_industry" property="replyUserInfo.industry"/>
        <result column="reply_level" property="replyUserInfo.level"/>
        <result column="reply_status" property="replyUserInfo.status"/>
        <result column="content" property="content"/>
        <result column="content_img_url" property="contentImgUrl"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
</mapper>